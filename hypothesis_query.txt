```sql
SELECT 
  COUNT(case_id) FILTER (WHERE 
    event_name MATCHES ('Credit requested' -> 'Review request' -> 'Standard terms applicable?')
  ) / COUNT(case_id) * 100
FROM 
  FLATTEN("defaultview-4")
``````sql
SELECT 
    COUNT(*) 
FROM 
    ( 
    SELECT 
        T1.case_id 
    FROM 
        Process T1 
    WHERE 
        T1.Activity = 'Prepare special terms'
        AND T1.case_id NOT IN 
        ( 
            SELECT 
                T2.case_id
            FROM 
                Process T2
            WHERE 
                T2.Activity = 'Standard terms applicable?'
                AND T2."lifecycle:transition" = 'complete'
        ) 
    UNION ALL 
    SELECT 
        T1.case_id 
    FROM 
        Process T1 
    WHERE 
        T1.Activity = 'Prepare special terms'
        AND T1.case_id IN 
        ( 
            SELECT 
                T2.case_id
            FROM 
                Process T2
            WHERE 
                T2.Activity = 'Standard terms applicable?'
                AND T2."lifecycle:transition" = 'complete'
                AND NOT EXISTS 
                ( 
                    SELECT 
                        1 
                    FROM 
                        Process T3 
                    WHERE 
                        T3.case_id = T2.case_id 
                        AND T3.Activity = 'Standard terms applicable?' 
                        AND T3."lifecycle:transition" = 'complete' 
                        AND T3.elementId = T2.elementId
                        AND T3."org:resource" = 'no'
                )
        )
    ) T
``````sql
SELECT COUNT(DISTINCT case_id) 
FROM FLATTEN("defaultview-4") 
WHERE "lifecycle:transition" = 'complete' AND Activity IN ('Prepare special terms') 
AND event_name NOT MATCHES ('Standard terms applicable?' ~> 'yes' -> 'Prepare special terms');
``````sql
SELECT 
    CASE 
        WHEN EXISTS (
            SELECT 1 
            FROM your_table_name e1
            JOIN your_table_name e2 ON e1.CASE_ID = e2.CASE_ID
            WHERE e1.EVENT_NAME = 'Send quote' AND e2.EVENT_NAME = 'Calculate terms'
            AND e1.END_TIME < e2.END_TIME
        ) THEN 'False'
        ELSE 'True'
    END AS result
``````sql
SELECT 
  COUNT(case_id) 
FROM 
  FLATTEN("defaultview-4") 
WHERE 
  event_name NOT MATCHES ('Calculate terms' ~> 'Send quote')
``````sql
SELECT 
    COUNT(CASE_ID) AS num_inconsistent_processes
FROM 
    (
    SELECT 
        T1.CASE_ID,
        LAG(T1.EVENT_NAME) OVER (PARTITION BY T1.CASE_ID ORDER BY T1.END_TIME) AS prev_event,
        T1.EVENT_NAME,
        LEAD(T1.Activity) OVER (PARTITION BY T1.CASE_ID ORDER BY T1.END_TIME) AS next_activity
    FROM 
        your_table_name T1
    ) subquery
WHERE 
    prev_event = 'Review request' AND next_activity != 'ParallelGateway'
``````sql
SELECT COUNT(case_id)
FROM FLATTEN("defaultview-4")
WHERE event_name MATCHES ('Review request' -> 'ParallelGateway')
```